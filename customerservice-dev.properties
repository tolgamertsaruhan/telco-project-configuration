spring.application.name=customerservice
server.port=0

#Eureka Config
eureka.client.fetch-registry=true
eureka.client.register-with-eureka=true
eureka.client.service-url.defaultZone=http://localhost:8090/eureka
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${instanceId:${random.value}}

#Postgre Config
spring.datasource.url=jdbc:postgresql://localhost:5450/customerdb
spring.datasource.username=admin
spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver
#JPA Config
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

spring.jpa.properties.hibernate.format_sql=true
#Kafka Config
spring.cloud.stream.kafka.binder.brokers=localhost:29092
spring.cloud.stream.bindings.customerCreated-out-0.destination=customer-created-event
spring.cloud.stream.bindings.addressCreated-out-0.destination=address-created-event
spring.cloud.stream.bindings.addressDeleted-out-0.destination=address-deleted-event
spring.cloud.stream.bindings.addressUpdated-out-0.destination=address-updated-event

spring.cloud.stream.bindings.contactMediumCreated-out-0.destination=contactMedium-created-event
spring.cloud.stream.bindings.contactMediumDeleted-out-0.destination=contactMedium-deleted-event
spring.cloud.stream.bindings.contactMediumUpdated-out-0.destination=contactMedium-updated-event
#spring.kafka.bootstrap-servers=localhost:29092
# spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
# spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


